version: '3.8'

networks:
  default:
    name: nginx-proxy-network
    external: true

services:
  nginx-proxy:
    container_name: nginx-proxy
    image: nginxproxy/nginx-proxy:latest
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      - DEFAULT_HOST=yourminlaxz.me # or even sub-domain.domain.tld
    volumes:
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam
      - certs:/etc/nginx/certs
      - /var/run/docker.sock:/tmp/docker.sock:ro

  letsencrypt:
    container_name: nginx-proxy-le
    image: nginxproxy/acme-companion:latest
    restart: unless-stopped
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam:ro
      - certs:/etc/nginx/certs
      - acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - nginx-proxy

volumes:
  vhost:
  html:
  dhparam:
  certs:
  acme:


# ! First create a docker external network `nginx-proxy-network` with bridge driver (default)

# This is how you may connect to ssl-reverse-proxy with `docker run`
# docker run \
# --name=testimonial \
# --expose 80 \
# --env VIRTUAL_HOST=testimonial.domain.tld \
# --env VIRTUAL_PORT=80 \
# --env LETSENCRYPT_HOST=testimonial.domain.tld \
# --volume /home/minlaxz/test-domain:/usr/share/nginx/:ro \
# --network="nginx-proxy" \
# --detach \
# nginx:alpine

# This is how you may connect to ssl-reverse-proxy with `docker compose`
# * attach .env file to nginx 
# VIRTUAL_HOST=sub-domain.DEFAULT_HOST # OR even sub.sub....domain.tld
# LETSENCRYPT_HOST=sub-domain.DEFAULT_HOST # OR even sub.sub....domain.tld
# * in compose file 
# networks:
#   default:
#     name: nginx-proxy <= nginx-reverse-proxy-network
#     external: true
